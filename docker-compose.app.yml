version: '3.7'

networks:
  dbnet:
    external: true
    name: dbnet

services:
  main-app:
    image: veekz/sfc-prj-main-app-preproduction:latest
    container_name: sfc-prj-main-app
    ports:
      - "5000:3000"
    depends_on:
      - postgres
    links:
      - kafka
    environment:
      DB_HOST: host.docker.internal
      FASTIFY_ADDR: "0.0.0.0"
      FASTIFY_PORT: 3000
      APP_KAFKA_BOOTSTRAP_SERVER: host.docker.internal:9092
      APP_KAFKA_TOPIC: topic-main-app
      KAFKA_APP_NAME: sfc-prj-main-app
      KAFKA_GROUP_NAME: sfc-prj
      KAFKA_USAGE: true
    networks:
      - dbnet
  #ms1:
    #image: veekz/sfc-prj-ms1-preproduction:latest
    #container_name: sfc-prj-ms1
    #ports:
    #  - "5001:3000"
    #depends_on:
    #  - postgres
    #links:
    #  - kafka
    #environment:
    #  DB_HOST: host.docker.internal
    #  DB_SYNCHRONIZE: false
    #  FASTIFY_ADDR: "0.0.0.0"
    #  FASTIFY_PORT: 3000
    #  APP_KAFKA_BOOTSTRAP_SERVER: kafka:9092
    #  APP_KAFKA_TOPIC: topic-main-app
    #  KAFKA_APP_NAME: sfc-prj-ms1
    #  KAFKA_GROUP_NAME: sfc-prj
    #  KAFKA_USAGE: true
    #networks:
    #  - dbnet
  #ms2:
    #image: veekz/sfc-prj-ms2-preproduction:latest
    #container_name: sfc-prj-ms2
    #ports:
    #  - "5002:3000"
    #depends_on:
    #  - postgres
    #links:
    #  - kafka
    #environment:
    #  DB_HOST: host.docker.internal
    #  DB_SYNCHRONIZE: false
    #  FASTIFY_ADDR: "0.0.0.0"
    #  FASTIFY_PORT: 3000
    #  APP_KAFKA_BOOTSTRAP_SERVER: kafka:9092
    #  APP_KAFKA_TOPIC: topic-main-app
    #  KAFKA_APP_NAME: sfc-prj-ms2
    #  KAFKA_GROUP_NAME: sfc-prj
    #  KAFKA_USAGE: true
    #networks:
    #  - dbnet

  postgres:
    image: postgres
    environment:
      POSTGRES_USER: tutorial
      POSTGRES_DB: iam
      POSTGRES_PASSWORD: privatepassword
    ports:
      - "5432:5432"
    volumes:
      - ./docker/postgres:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    links:
      - postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: privatepassword
    ports:
      - "8000:80"
  #zookeeper:
  #  container_name: zookeeper
  #  hostname: zookeeper
  #  image: wurstmeister/zookeeper:latest
  #  ports:
  #    - "2181:2181"
  #  environment:
  #    ZOOKEEPER_SASL_ENABLED: FALSE
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_QUORUM_LISTEN_ON_ALL_IPS: 'true'
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    links:
      - zookeeper
    extra_hosts:
      - "kafka:127.0.0.1"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "host.docker.internal:2181"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_ADVERTISED_HOSTNAME: kafka
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://:9092"
      KAFKA_LISTENERS: "PLAINTEXT://:9092"
  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8080:8080"
    restart: always
    links:
      - kafka
      - zookeeper
    #  - kafka-connect
    environment:
      KAFKA_CLUSTERS_0_NAME: "kafka"
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "host.docker.internal:9092"
      KAFKA_CLUSTERS_0_ZOOKEEPER: "host.docker.internal:2181"
      #KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME: "kafka-cp"
      #KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS: "http://host.docker.internal:8083"

  #kafka-connect:
    #image: confluentinc/cp-kafka-connect:latest
    #ports:
    #  - "8083:8083"
    #depends_on:
    #  - kafka
    #environment:
    #  CONNECT_BOOTSTRAP_SERVERS: "host.docker.internal:9092"
    #  CONNECT_GROUP_ID: compose-connect-group
    #  CONNECT_CONFIG_STORAGE_TOPIC: _connect_configs
    #  CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
    #  CONNECT_OFFSET_STORAGE_TOPIC: _connect_offset
    #  CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
    #  CONNECT_STATUS_STORAGE_TOPIC: _connect_status
    #  CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
    #  CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
    #  CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.storage.StringConverter
    #  CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
    #  CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
    #  CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect
    #  CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"